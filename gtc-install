#!/usr/bin/env bash 
#
# GTC Installer
# (c) 2012 Alessandro "alorenzi" Lorenzi (alorenzi@garl.ch)
# Tool to install the GTC (Gippa Thin Client) in a partition.
#
# Install the system in a partition
# * Check that the specified parm is a partition
# * Ask for "are you sure? Deleting everything"
# * Format vfat partition
# * syslinux -i /dev/mypartition
# * copy /cdrom in /mnt (or wherever)
# * umount ; sync
#
# Ref: https://wiki.ubuntu.com/LiveUsbPendrivePersistent



# sudo ./gtc-install -d /dev/sdb -c /home/alorenzi/gtc.conf -i /home/alorenzi/gippa.iso -t ./tmp

## Trap any errors in the cleanup phase
#trap umnt_and_deltmp SIGTERM SIGHUP SIGINT

dev=""
iso=""
conf=""
tmp=""


#if grub<2 then grub="" ; if grub >= 2.0 then grub="2"
## Checking grub version 
if [ -x /usr/sbin/grub2-install ] 
then
   grubv="2"
else
   grubv=""
fi

isoname="gtc.iso"
confname="gtc.release"
host="gtc.garl.ch"
isolocation="http://${host}/iso/$isoname"
conflocation="http://${host}/conf/$confname"

helper(){
	echo "Usage: $0 -d device [-t tempdir] [-i iso] [-c conffile]"
	echo "$ sudo ./gtc-install -d /dev/sdb1 -i ~/gippa.iso -c ~/gtc.conf -t ./tmp/ "
	exit 1
}

ckerror(){
	if [[ $? -ne 0 ]]
	then
		echo "ERROR: $1 failed"
		## Cleanup before leaving
		umnt_and_deltmp

		exit 1
	fi
}

permission(){
	if [ `whoami` != root ]
	then
		echo "I need to format, mount, delete and some other root stuffs. Be root! Try:"
		echo "# sudo $0"
		echo "# su -c \"$0\" "
		exit 1
	fi

}

set_options(){

	while getopts ":d:i:t:c:" opt; do
		case $opt in
		d)
			dev=$OPTARG
			;;
		i)
			iso=$OPTARG
			;;
		t)
			tmp=$OPTARG
			;;
		c)
			conf=$OPTARG
			;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			exit 1
			;;
		:)
			echo "Option -$OPTARG requires an argument." >&2
			exit 1
			;;
		esac
	done

	if [ "$dev" == "" ]
	then 
		helper
	fi
	
	if [ "$tmp" == "" ]
	then
		tmp=`mktemp -d`
		ckerror "creation temp directory"
		
	else
		mkdir -p $tmp
		tmp=`realpath $tmp`
		if [[ -d $tmp ]]
		then
			echo -n ""
		else
			echo "ERROR: creation temp directory failed"
			return 1
		fi
	fi 
}

verify_dev (){
	if [[ `file ${dev} | grep block | wc -l` -eq 0 ]]
	then
		echo "ERROR: ${dev} is not a block device"
		echo "exiting"
		exit 1
	fi
}

formatting (){
	echo "I'm going to format ${dev}, this will destroy all content. "
	echo -n "Type yes is you want to format, else ^C : "

	read verify
	# yes to uppercase/lowercase
	while [ `echo "x$verify" |sed 's/.*/\U&/'|  sed 's/^ *//g' | sed 's/ *$//g' ` != "XYES" ]
	do
		echo -n "Type yes is you want to format, else ^C : "
		read verify			
	done
	
	echo "Ok, I'll continue"
	echo -n "Formatting ................ " 
	mkfs.vfat ${dev} -n "GTC" > /dev/null
	echo "done"
	
	ckerror "formatting"
	
        ## mounting is here!
	mount ${dev} $tmp/
        ## FIXME: Check if mount succeeded
	ckerror "mount ${dev}"

	## Creating temp dir into partition
	## To avoid disk full (if you are low in mem)
        mkdir -p $tmp/dwnld	
 
}

downloadiso(){
	if [[ !(-f "$iso") ]]
	then	
		echo "Downloading ..."
		wget $isolocation -O $tmp/dwnld/$isoname
		# da salvare in file temporaneo, poi se ok [sha1 sum] copiare
		ckerror "download iso"
		iso="$tmp/dwnld/$isoname"
	fi
}

downloadconf(){
	if [[ !(-f "$conf") ]]
	then
		wget $conflocation -O $tmp/dwnld/$confname
		ckerror "download config"
		conf=$tmp/dwnld/$confname
	fi
}

ckiso(){
	#sha1iso=`sha1sum $tmp/dwnld/$isoname| cut -f 1 -d " "`
	sha1iso=`sha1sum $iso| cut -f 1 -d " "`
	sha1conf=`cat $conf | grep sha1 | cut -f2 -d "=" |  sed 's/^ *//g' | sed 's/ *$//g'`
	if [[ "x$sha1iso" != "x$sha1conf" ]]
	then
		echo "$sha1iso $sha1conf"
		echo "ERROR: sha1 don't match"
		exit 1
	fi
}

mnt_and_cpy()
{

	# Get the RAW device for MBR installation
        raw_dev=$(echo -n ${dev}|tr -d "[:digit:]")

	echo -n "Copying stuff ............. "
	## FIXME: check if file exists
	cp $iso $tmp/$isoname
	ckerror "iso copy"

	## FIXME: check if file exists
	cp $conf $tmp/$confname
	ckerror "configuration file copy"
	echo "done"

	echo -n "Grub install .............. "
	grub${grubv}-install $raw_dev --boot-directory=$tmp/boot --force --no-floppy 2> /dev/null
	ckerror "grub install"

	# sorry for bad indentation. 
	# FIXME: need to understand which partition and update hd0,1 instead
	cat > $tmp/boot/grub${grubv}/grub.cfg <<EOCAT
set timeout=3
menuentry "GTC Thin Client" {
insmod fat
loopback loop (hd0,1)/$isoname
linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=/$isoname quiet splash --
initrd (loop)/casper/initrd.lz
}
EOCAT

	echo "done"

	## Removing temp stuffs
        echo -n  "Removing temp files........ "
        rm -rf $tmp/dwnld
	echo "done"
}

umnt_and_deltmp()
{
	echo -n "Umount destination ........ "
	sync
	umount ${dev}
	ckerror "umount ${dev}"
	echo "done"
	
	rm -rf $tmp
	ckerror "delete temp dir"
}


## Main is here

permission
set_options "$@"
verify_dev
formatting
downloadiso
downloadconf
ckiso
mnt_and_cpy
umnt_and_deltmp

